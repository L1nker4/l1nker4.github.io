<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>网络 on l1nker4&#39;s Blog</title>
    <link>http://localhost:59500/tags/%E7%BD%91%E7%BB%9C/</link>
    <description>Recent content in 网络 on l1nker4&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 10 Feb 2023 21:33:11 +0000</lastBuildDate>
    <atom:link href="http://localhost:59500/tags/%E7%BD%91%E7%BB%9C/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>HTTPS通信过程分析</title>
      <link>http://localhost:59500/posts/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/https%E9%80%9A%E4%BF%A1%E8%BF%87%E7%A8%8B%E5%88%86%E6%9E%90/</link>
      <pubDate>Fri, 10 Feb 2023 21:33:11 +0000</pubDate>
      <guid>http://localhost:59500/posts/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/https%E9%80%9A%E4%BF%A1%E8%BF%87%E7%A8%8B%E5%88%86%E6%9E%90/</guid>
      <description>&lt;h3 id=&#34;为什么需要https&#34;&gt;为什么需要HTTPS&lt;/h3&gt;&#xA;&lt;p&gt;HTTP缺点：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;明文传输&lt;/li&gt;&#xA;&lt;li&gt;C/S两端不存在验证机制，无法确认对方身份，可能存在中间人攻击。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;概念&#34;&gt;概念&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;对称加密：客户端和服务器持有同一个密钥对数据进行加密解密。&lt;/li&gt;&#xA;&lt;li&gt;非对称加密：公钥加密私钥解密、私钥加密公钥解密&lt;/li&gt;&#xA;&lt;li&gt;CA：证书认证机构，签发数字证书，保证公钥的可信度。&lt;/li&gt;&#xA;&lt;li&gt;数字证书：包含版本、序列号、有效期、颁发者、公钥等信息&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;数字证书是由CA颁发用于证明身份的证书，通过域名申请对应证书，域名的合法性由CA机构保证。&lt;/p&gt;&#xA;&lt;p&gt;TLS有以下几个子协议：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;记录协议（Record Protocol）：规定TLS收发数据的基本单位为&lt;strong&gt;record&lt;/strong&gt;，类似于TCP的segment，所有子协议都必须通过记录协议发出。&lt;/li&gt;&#xA;&lt;li&gt;警报协议（Alert  Protocol）：向对方发出警报信息，比如：证书问题等&lt;/li&gt;&#xA;&lt;li&gt;握手协议（Handshake Protocol）：两端协商TLS版本号、随机数、密码套件等信息，然后客户端通过服务端的公钥和证书上的数字签名、两端协商得到会话密钥。&lt;/li&gt;&#xA;&lt;li&gt;变更密码规范协议：通知对方后续数据使用密码加密保护&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;https通信过程&#34;&gt;HTTPS通信过程&lt;/h2&gt;&#xA;&lt;p&gt;HTTPS通信可以划分为三个阶段：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;TCP协议：通过三次握手建立TCP连接&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;TLS协议：四次握手建立TLS连接&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;HTTPS协议：客户端发送请求，服务端响应请求，通信报文使用密钥加密。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;TLS 1.2 握手：使用非对称加密方式创建对称密钥，并使用对称加密完成HTTP通信。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://blog-1251613845.cos.ap-shanghai.myqcloud.com/20230326182939.png&#34; alt=&#34;TLS 1.2 handshake&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;详细过程：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;客户端发送&lt;code&gt;Client Hello&lt;/code&gt;消息到服务端，消息包含TLS版本、加密套件（Cipher Suite）、压缩算法、随机数，会话信息扩展信息等。&lt;/li&gt;&#xA;&lt;li&gt;服务端发送&lt;code&gt;Server Hello&lt;/code&gt;消息，消息包含服务端的TLS版本、加密套件（Cipher Suite）、会话信息&lt;/li&gt;&#xA;&lt;li&gt;服务端发送&lt;code&gt;Certificate&lt;/code&gt;消息，包括服务端的证书信息。&lt;/li&gt;&#xA;&lt;li&gt;服务端发送&lt;code&gt;Server Key Exchange&lt;/code&gt;消息，发送公钥与签名信息等。可能与&lt;code&gt;Server Hello Done&lt;/code&gt;消息一同发送。&lt;/li&gt;&#xA;&lt;li&gt;客户端发送&lt;code&gt;Client Key Exchange&lt;/code&gt;消息，根据自己信任的CA列表，验证服务端证书是否可行，可信则生成一串伪随机数，并使用公钥加密，这串随机数被用于生成新的&lt;strong&gt;对称密钥&lt;/strong&gt;。&lt;/li&gt;&#xA;&lt;li&gt;服务器端使用私钥解密随机数，并使用随机数生成自己的&lt;strong&gt;对称主密钥&lt;/strong&gt;。&lt;/li&gt;&#xA;&lt;li&gt;客户端发送&lt;code&gt;Finished&lt;/code&gt;消息，使用对称密钥加密这次通信的hash值。&lt;/li&gt;&#xA;&lt;li&gt;服务端生成自己的hash值，然后解密客户端发来的信息，检查这两个值是否对应，若对应则发送&lt;code&gt;Finished&lt;/code&gt;消息。&lt;/li&gt;&#xA;&lt;li&gt;接下来，整个HTTP会话都是用对称密钥进行加密并传输。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;TLS握手的关键点：通过生成的随机数和服务端公钥，生成新的密钥，后续通信使用这个对称密钥加密，防止中间人攻击。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
