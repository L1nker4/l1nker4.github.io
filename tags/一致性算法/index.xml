<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>一致性算法 on L1nker4&#39;s Blog | 格木观云</title>
    <link>http://localhost:1313/tags/%E4%B8%80%E8%87%B4%E6%80%A7%E7%AE%97%E6%B3%95/</link>
    <description>Recent content in 一致性算法 on L1nker4&#39;s Blog | 格木观云</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 31 Jan 2022 14:19:03 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/%E4%B8%80%E8%87%B4%E6%80%A7%E7%AE%97%E6%B3%95/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Raft论文阅读笔记</title>
      <link>http://localhost:1313/posts/%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F/raft-note/</link>
      <pubDate>Mon, 31 Jan 2022 14:19:03 +0000</pubDate>
      <guid>http://localhost:1313/posts/%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F/raft-note/</guid>
      <description>&lt;h2 id=&#34;介绍&#34;&gt;介绍&lt;/h2&gt;&#xA;&lt;p&gt;Paxos算法较为复杂，并且不易于应用到工业界，因此诞生了Raft算法，其首要目标是可理解性，Raft算法主要分解为几个部分：领导者选举、日志复制、安全性、成员变更等。Raft算法有一些独特的特性：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;强领导者：日志entry只从领导者发送给其他服务器&lt;/li&gt;&#xA;&lt;li&gt;领导者选举：Raft算法采用一个随即计时器来选举领导人&lt;/li&gt;&#xA;&lt;li&gt;成员关系调整：Raft算法采用一种共同一致的方法来处理集群成员变换的问题，此时集群依然可以工作。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;属性解释&#34;&gt;属性解释&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;状态&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;h4 id=&#34;所有服务器上的持久性状态&#34;&gt;所有服务器上的持久性状态&lt;/h4&gt;&#xA;&lt;p&gt;(在响应 RPC 请求之前，已经更新到了稳定的存储设备)&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;参数&lt;/th&gt;&#xA;          &lt;th&gt;解释&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;currentTerm&lt;/td&gt;&#xA;          &lt;td&gt;服务器已知最新的任期（在服务器首次启动时初始化为0，单调递增）&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;votedFor&lt;/td&gt;&#xA;          &lt;td&gt;当前任期内收到选票的 candidateId，如果没有投给任何候选人 则为空&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;log[]&lt;/td&gt;&#xA;          &lt;td&gt;日志条目；每个条目包含了用于状态机的命令，以及领导人接收到该条目时的任期（初始索引为1）&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h4 id=&#34;所有服务器上的易失性状态&#34;&gt;所有服务器上的易失性状态&lt;/h4&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;参数&lt;/th&gt;&#xA;          &lt;th&gt;解释&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;commitIndex&lt;/td&gt;&#xA;          &lt;td&gt;已知已提交的最高的日志条目的索引（初始值为0，单调递增）&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;lastApplied&lt;/td&gt;&#xA;          &lt;td&gt;已经被应用到状态机的最高的日志条目的索引（初始值为0，单调递增）&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h4 id=&#34;领导人服务器上的易失性状态&#34;&gt;领导人（服务器）上的易失性状态&lt;/h4&gt;&#xA;&lt;p&gt;(选举后已经重新初始化)&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;参数&lt;/th&gt;&#xA;          &lt;th&gt;解释&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;nextIndex[]&lt;/td&gt;&#xA;          &lt;td&gt;对于每一台服务器，发送到该服务器的下一个日志条目的索引（初始值为领导人最后的日志条目的索引+1）&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;matchIndex[]&lt;/td&gt;&#xA;          &lt;td&gt;对于每一台服务器，已知的已经复制到该服务器的最高日志条目的索引（初始值为0，单调递增）&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h4 id=&#34;追加条目appendentriesrpc&#34;&gt;&lt;strong&gt;追加条目（AppendEntries）RPC&lt;/strong&gt;：&lt;/h4&gt;&#xA;&lt;p&gt;由leader调用，用于日志条目的复制，同时也被当做心跳使用&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;参数&lt;/th&gt;&#xA;          &lt;th&gt;解释&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;term&lt;/td&gt;&#xA;          &lt;td&gt;领导人的任期&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;leaderId&lt;/td&gt;&#xA;          &lt;td&gt;领导人 ID 因此跟随者可以对客户端进行重定向（译者注：跟随者根据领导人 ID 把客户端的请求重定向到领导人，比如有时客户端把请求发给了跟随者而不是领导人）&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;prevLogIndex&lt;/td&gt;&#xA;          &lt;td&gt;紧邻新日志条目之前的那个日志条目的索引&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;prevLogTerm&lt;/td&gt;&#xA;          &lt;td&gt;紧邻新日志条目之前的那个日志条目的任期&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;entries[]&lt;/td&gt;&#xA;          &lt;td&gt;需要被保存的日志条目（被当做心跳使用时，则日志条目内容为空；为了提高效率可能一次性发送多个）&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;leaderCommit&lt;/td&gt;&#xA;          &lt;td&gt;领导人的已知已提交的最高的日志条目的索引&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;返回值&lt;/th&gt;&#xA;          &lt;th&gt;解释&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;term&lt;/td&gt;&#xA;          &lt;td&gt;当前任期，对于领导人而言 它会更新自己的任期&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;success&lt;/td&gt;&#xA;          &lt;td&gt;如果跟随者所含有的条目和 prevLogIndex 以及 prevLogTerm 匹配上了，则为 true&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h5 id=&#34;receiver的实现&#34;&gt;receiver的实现&lt;/h5&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;如果&lt;code&gt;term &amp;lt; currentTerm&lt;/code&gt;， return false&lt;/li&gt;&#xA;&lt;li&gt;在接收者日志中 如果能找到一个和 prevLogIndex 以及 prevLogTerm 一样的索引和任期的日志条目 则继续执行下面的步骤 否则return false&lt;/li&gt;&#xA;&lt;li&gt;如果一个已经存在的条目和新条目发生了冲突，那么就删除这个已经存在的条目以及它之后的所有条目&lt;/li&gt;&#xA;&lt;li&gt;追加的条目暂未存在日志中&lt;/li&gt;&#xA;&lt;li&gt;如果&lt;code&gt;leaderCommit &amp;gt; commitIndex&lt;/code&gt;，设置commitIndex = min(leaderCommit, index of last new entry)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;请求投票requestvoterpc&#34;&gt;&lt;strong&gt;请求投票（RequestVote）RPC&lt;/strong&gt;：&lt;/h4&gt;&#xA;&lt;p&gt;由候选人负责调用用来征集选票（5.2 节）&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
