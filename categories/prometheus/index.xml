<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Prometheus on l1nker4&#39;s Blog</title>
    <link>http://localhost:59500/categories/prometheus/</link>
    <description>Recent content in Prometheus on l1nker4&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 11 Jun 2022 13:02:34 +0000</lastBuildDate>
    <atom:link href="http://localhost:59500/categories/prometheus/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>使用Prometheus &#43; Grafana 构建监控可视化系统</title>
      <link>http://localhost:59500/posts/%E4%B8%AD%E9%97%B4%E4%BB%B6/prometheus/%E4%BD%BF%E7%94%A8prometheus-&#43;-grafana-%E6%9E%84%E5%BB%BA%E7%9B%91%E6%8E%A7%E5%8F%AF%E8%A7%86%E5%8C%96%E7%B3%BB%E7%BB%9F/</link>
      <pubDate>Sat, 11 Jun 2022 13:02:34 +0000</pubDate>
      <guid>http://localhost:59500/posts/%E4%B8%AD%E9%97%B4%E4%BB%B6/prometheus/%E4%BD%BF%E7%94%A8prometheus-&#43;-grafana-%E6%9E%84%E5%BB%BA%E7%9B%91%E6%8E%A7%E5%8F%AF%E8%A7%86%E5%8C%96%E7%B3%BB%E7%BB%9F/</guid>
      <description>&lt;h1 id=&#34;监控系统简介&#34;&gt;监控系统简介&lt;/h1&gt;&#xA;&lt;p&gt;业务监控系统通常包含以下一些组件：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;采集&lt;/strong&gt;：信息源来自log、metrics等。&#xA;&lt;ul&gt;&#xA;&lt;li&gt;可以通过定期外围探测、AOP手动织入、字节码自动织入&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;上报&lt;/strong&gt;：通过http或者tcp&lt;/li&gt;&#xA;&lt;li&gt;聚合&lt;/li&gt;&#xA;&lt;li&gt;存储&lt;/li&gt;&#xA;&lt;li&gt;可视化、告警&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;业务监控系统解决了什么问题？&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;趋势分析：收集长期监控数据，对监控指标进行趋势分析，例如：分析磁盘空间增长率，预测何时进行磁盘扩容。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;对照分析：分析不同版本在运行时资源使用情况差异。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;告警：当服务出现故障时，监控可以迅速反应并告警。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;故障分析与定位：故障发生时，可以通过分析历史数据去定位问题。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;数据可视化：通过采集的数据，生成可视化仪表盘。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;对于运维：监控CPU、内存、硬盘等使用情况。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;对于研发：监控某个异常指标的变化情况，来保证业务的稳定性。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;对于产品或运营：关注产品层面：某个活动参加人数的增长情况等&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;监控系统分为以下五层：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;端监控：对网站、APP、小程序等进行端监控，采集页面打开速度、稳定性、外部服务调用成功率等参数。&lt;/li&gt;&#xA;&lt;li&gt;业务层监控：对业务模块进行监控，采集QPS、DAU、业务接口访问数量等。&lt;/li&gt;&#xA;&lt;li&gt;应用层监控：对分布式应用进行管理和监控&lt;/li&gt;&#xA;&lt;li&gt;中间件监控：对中间件进行监控，主要判断组件是否存活。&lt;/li&gt;&#xA;&lt;li&gt;系统层监控：对操作系统监控，主要包括：CPU、磁盘I/O、网络连接等参数。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;prometheus简介&#34;&gt;Prometheus简介&lt;/h1&gt;&#xA;&lt;p&gt;当前监控系统主要有集中式日志解决方案（ELK）和时序数据库解决方案。监控三要素如下：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Metrics：可聚合，带有时间戳的数据。&lt;/li&gt;&#xA;&lt;li&gt;Logging：离散日志，分为有结构和无结构。&lt;/li&gt;&#xA;&lt;li&gt;Tracing：请求域内的调用链。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;prometheus架构&#34;&gt;Prometheus架构&lt;/h2&gt;&#xA;&lt;p&gt;Prometheus的架构图如下所示：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://blog-1251613845.cos.ap-shanghai.myqcloud.com/prometheus/Prometheus-framework.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;其中各组件功能如下：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Prometheus Server：核心部分，负责实现对监控数据的获取，存储以及查询。&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Retrieval：定时去配置文件中指定target抓取指标数据。（Pull）&lt;/li&gt;&#xA;&lt;li&gt;TSDB：Prometheus内置了时序数据库，存储抓取的指标数据。&lt;/li&gt;&#xA;&lt;li&gt;HTTP Server：提供了HTTP接口进行操作。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Jobs/exporters：exporter将监控数据通过HTTP服务的形式暴露给Prometheus Server，其定时进行Pull。&lt;/li&gt;&#xA;&lt;li&gt;Pushgateway：临时性的Job可以将监控数据push到这，Prometheus从Pushgateway拉取数据。&lt;/li&gt;&#xA;&lt;li&gt;AlertManager：告警处理中心。Prometheus支持基于PromQL创建告警规则。&lt;/li&gt;&#xA;&lt;li&gt;Data Visualization：数据可视化，其中Prometheus自带的web UI可以通过PromQL进行查询，通过Grafana可以展示丰富的图表数据。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;从上述组件可以看出：Prometheus提供了&lt;strong&gt;收集数据-&amp;gt;存储数据-&amp;gt;处理数据-&amp;gt;展示数据&lt;/strong&gt;这一系列功能，完全适用上述的应用场景。&lt;/p&gt;&#xA;&lt;h2 id=&#34;获取监控数据的两种方式&#34;&gt;获取监控数据的两种方式&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Pull：从监控的target通过轮询获取监控信息。主要是HTTP API。&#xA;&lt;ul&gt;&#xA;&lt;li&gt;告警可以按照策略分片，可以做到数据的冷热分离。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;主要流程如下：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Prometheus根据配置定期去targets拉取数据。&lt;/li&gt;&#xA;&lt;li&gt;当拉取数据大于配置的内存缓冲区时，Prometheus会将数据持久化到磁盘或云端。&lt;/li&gt;&#xA;&lt;li&gt;Prometheus通过PromQL、API等方式获取数据，同时可以配置rules，当触发条件时，将alert推送到配置的alertmanager。&lt;/li&gt;&#xA;&lt;li&gt;alertmanager收到告警时，会执行相应的策略。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Push：程序主动将数据推送到监控系统中，Prometheus采用gateway实现该方式。&#xA;&lt;ul&gt;&#xA;&lt;li&gt;实时性好&lt;/li&gt;&#xA;&lt;li&gt;由于推送时机的不可预知性，监控系统无法掌握主动性，可能会导致对监控进程产生影响。&lt;/li&gt;&#xA;&lt;li&gt;增加gateway组件，增加了系统的复杂度。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;优缺点&#34;&gt;优缺点&lt;/h2&gt;&#xA;&lt;p&gt;优点：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Golang编写，支持云原生，二进制文件直接启动，也支持容器化部署。&lt;/li&gt;&#xA;&lt;li&gt;支持多种语言的客户端。&lt;/li&gt;&#xA;&lt;li&gt;支持本地存储和云端存储，单机性能强。&lt;/li&gt;&#xA;&lt;li&gt;可扩展，使用联邦集群启动多个Prometheus实例来分布式处理。&lt;/li&gt;&#xA;&lt;li&gt;支持静态文件配置和动态发现等机制。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;缺点：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;不适用Logging、Tracing等监控。&lt;/li&gt;&#xA;&lt;li&gt;Prometheus数据默认保留15天，适用于追踪近期数据。&lt;/li&gt;&#xA;&lt;li&gt;本地存储有限，需要考虑第三方存储。&lt;/li&gt;&#xA;&lt;li&gt;联邦集群没有提供统一的全局视图。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;grafana简介&#34;&gt;Grafana简介&lt;/h1&gt;&#xA;&lt;p&gt;Grafana是一个可以通过各种图形方式对数据进行可视化的一个开源软件，官网简介如下：&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
