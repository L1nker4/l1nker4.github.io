<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Spring Framework on l1nker4&#39;s Blog | 格木观云</title>
    <link>http://localhost:1313/categories/spring-framework/</link>
    <description>Recent content in Spring Framework on l1nker4&#39;s Blog | 格木观云</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 14 Mar 2019 20:15:42 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/categories/spring-framework/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Spring学习笔记（一）</title>
      <link>http://localhost:1313/posts/java%E5%9F%BA%E7%A1%80/spring01/</link>
      <pubDate>Thu, 14 Mar 2019 20:15:42 +0000</pubDate>
      <guid>http://localhost:1313/posts/java%E5%9F%BA%E7%A1%80/spring01/</guid>
      <description>&lt;h1 id=&#34;基础&#34;&gt;基础&lt;/h1&gt;&#xA;&lt;h2 id=&#34;spring介绍&#34;&gt;Spring介绍&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Spring是一个开源框架。&lt;/li&gt;&#xA;&lt;li&gt;Spring为简化企业级应用开发而生，使用Spring可以使简单的JavaBean实现以前只有EJB才能实现的功能。&lt;/li&gt;&#xA;&lt;li&gt;Spring是一个IOC(DI)和AOP容器框架。&lt;/li&gt;&#xA;&lt;li&gt;轻量级：Spring是非侵入式的-基于Spring开发的应用中的对象可以不依赖于Spring的API&lt;/li&gt;&#xA;&lt;li&gt;依赖注入(DI)：Dependency Injection，IOC&lt;/li&gt;&#xA;&lt;li&gt;面向切面编程（AOP-aspect oriented programming）&lt;/li&gt;&#xA;&lt;li&gt;容器：Spring是一个容器，因为它包含并且管理应用对象的生命周期&lt;/li&gt;&#xA;&lt;li&gt;框架：Spring实现了使用简单的组件配置组合成一个复杂的应用，在Spring中可以使用XML和Java注解组合这些对象。&lt;/li&gt;&#xA;&lt;li&gt;一站式：在IOC和AOP的基础上可以整合各种企业应用的开源框架和优秀的第三方类库&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;核心特性&#34;&gt;核心特性&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;IoC容器&lt;/li&gt;&#xA;&lt;li&gt;Spring事件&lt;/li&gt;&#xA;&lt;li&gt;资源管理&lt;/li&gt;&#xA;&lt;li&gt;国际化&lt;/li&gt;&#xA;&lt;li&gt;校验&lt;/li&gt;&#xA;&lt;li&gt;数据绑定&lt;/li&gt;&#xA;&lt;li&gt;类型转换&lt;/li&gt;&#xA;&lt;li&gt;Spring表达式&lt;/li&gt;&#xA;&lt;li&gt;面向切面编程&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;ioc和di&#34;&gt;IOC和DI&lt;/h3&gt;&#xA;&lt;p&gt;IOC（Inversion of Control）：其思想是反转资源获取的方向。&lt;/p&gt;&#xA;&lt;p&gt;传统的资源查找方式要求组件向容器发起请求查找资源，作为回应，容器适时的返回资源，而应用了IOC之后，则是容器主动地将资源推送给它所管理的组件，组件所要做的仅是选择一种合适的方式来接受资源，这种行为 也被称为查找的被动形式。&lt;/p&gt;&#xA;&lt;p&gt;IoC容器的职责：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;依赖处理&#xA;&lt;ul&gt;&#xA;&lt;li&gt;依赖查找&lt;/li&gt;&#xA;&lt;li&gt;依赖注入&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;生命周期管理&#xA;&lt;ul&gt;&#xA;&lt;li&gt;容器&lt;/li&gt;&#xA;&lt;li&gt;托管的资源&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;配置&#xA;&lt;ul&gt;&#xA;&lt;li&gt;容器&lt;/li&gt;&#xA;&lt;li&gt;外部化配置&lt;/li&gt;&#xA;&lt;li&gt;托管资源&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;DI：IOC的另一种表述方式，即组件以一些预先定义好的方式（例如：setter方法）接受来自如容器的资源注入，相对于IOC而言，这种表述更直接。&lt;/p&gt;&#xA;&lt;h3 id=&#34;配置bean&#34;&gt;配置Bean&lt;/h3&gt;&#xA;&lt;p&gt;配置形式：基于XML文件的方式，基于注解的方式&lt;/p&gt;&#xA;&lt;p&gt;Bean的配置方式：通过全类名（反射），通过工厂方法（静态工厂方法&amp;amp;实例工厂方法），FactoryBean&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;beans&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;xmlns=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://www.springframework.org/schema/beans&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       &lt;span style=&#34;color:#a6e22e&#34;&gt;xmlns:xsi=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       &lt;span style=&#34;color:#a6e22e&#34;&gt;xsi:schemaLocation=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!--配置Bean--&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;bean&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;helloWorld&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;HelloWorld&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;value=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Spring&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/bean&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/beans&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;class：bean的全类名，通过反射的方式在IOC容器中创建bean，所以要求bean要有无参构造器&lt;/p&gt;&#xA;&lt;p&gt;id：标识容易中的bean，id唯一&lt;/p&gt;&#xA;&lt;p&gt;Spring提供了两种类型的IOC容器实现：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;BeanFactory：IOC容器的基本实现&lt;/li&gt;&#xA;&lt;li&gt;ApplicationContext 提供了更多的高级特大型，是BeanFactory的子接口&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;BeanFactory是Spring框架的基础设施，面向Spring本身&lt;/p&gt;&#xA;&lt;p&gt;ApplicationContext 面向使用Spring框架的开发者，几乎所有的应用场合都直接使用ApplicationContext&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ApplicationContext ctx &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; ClassPathXmlApplicationContext(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;applicationContext.xml&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;HelloWorld helloWorld &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (HelloWorld) ctx.&lt;span style=&#34;color:#a6e22e&#34;&gt;getBean&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;helloWorld&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;利用id定位到IOC容器中的Bean&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
