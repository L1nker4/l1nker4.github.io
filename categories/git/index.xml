<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Git on l1nker4&#39;s Blog</title>
    <link>http://localhost:59500/categories/git/</link>
    <description>Recent content in Git on l1nker4&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 30 May 2019 12:14:39 +0000</lastBuildDate>
    <atom:link href="http://localhost:59500/categories/git/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Git命令记录</title>
      <link>http://localhost:59500/posts/%E5%B7%A5%E5%85%B7/git-note/</link>
      <pubDate>Thu, 30 May 2019 12:14:39 +0000</pubDate>
      <guid>http://localhost:59500/posts/%E5%B7%A5%E5%85%B7/git-note/</guid>
      <description>&lt;h3 id=&#34;1-基本操作&#34;&gt;1. 基本操作&lt;/h3&gt;&#xA;&lt;h4 id=&#34;基本命令&#34;&gt;基本命令&lt;/h4&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;mkdir notes&#xA;cd notes&#xA;&#xA;# 初始化一个git仓库 &#xA;git init&#xA;&#xA;echo &amp;#34;my notes&amp;#34; &amp;gt; readme.md&#xA;&#xA;# 查看状态&#xA;git status&#xA;&#xA;# 查看修改内容&#xA;git diff readme.md&#xA;&#xA;# 添加文件到仓库&#xA;git add readme.md&#xA;&#xA;# 提交更改&#xA;git commit -m &amp;#34;add readme&amp;#34;&#xA;&#xA;# 查看提交日志&#xA;git log&#xA;&#xA;# 回退到上一个版本&#xA;git reset --hard HEAD^&#xA;&#xA;# HEAD: 当前版本&#xA;# HEAD^: 上一个版本&#xA;# HEAD~100: 前一百个版本&#xA;# 58a65b: 指定版本&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;工作区与暂存区&#34;&gt;工作区与暂存区&lt;/h4&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;|-------|            |-------|               |-------|&#xA;| 工作区 | -- add --&amp;gt; | 暂存区 | -- commit --&amp;gt; | 主分支 |&#xA;|-------|            |-------|               |-------|&#xA;&#xA;&#xA;# 查看工作区与暂存区文件的差异&#xA;git diff readme.md&#xA;&#xA;# 查看工作区和版本库最新版本的差异&#xA;git diff HEAD -- readme.md&#xA;&#xA;# 放弃工作区的修改(未执行 git add 命令)&#xA;git checkout -- readme.md&#xA;&#xA;# 撤销暂存区（已经执行了 git add 命令）&#xA;git reset HEAD readme.md&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;删除文件&#34;&gt;删除文件&lt;/h4&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# 删除文件&#xA;rm test.txt&#xA;git add test.txt&#xA;git commit -m &amp;#34;rm test.txt&amp;#34;&#xA;&#xA;# 直接从版本库中删除文件&#xA;git rm test.txt&#xA;git commit -m &amp;#34;git rm test.txt&amp;#34;&#xA;&#xA;# 还原文件&#xA;git reset --hard CommitID&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;2-远程仓库&#34;&gt;2. 远程仓库&lt;/h3&gt;&#xA;&lt;h4 id=&#34;github仓库&#34;&gt;Github仓库&lt;/h4&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# 在本地创建一个 gitlearn 目录，并进入&#xA;mkdir gitlearn&#xA;cd gitlearn&#xA;&#xA;# 使用命令 git init 初始化一个库&#xA;git init&#xA;&#xA;# 添加远程库 origin&#xA;git remote add origin git@github.com:l1nker4/gitlearn.git&#xA;&#xA;# 添加 readme.md 文件&#xA;echo &amp;#34;git learn is very easy!&amp;#34; &amp;gt; readme.md&#xA;&#xA;# 添加文件并提交到仓库&#xA;git add readme.md&#xA;git commit -m &amp;#34;add readme&amp;#34;&#xA;&#xA;# 执行向远程仓库 origin master 分支推送更新（-u 参数用于关联远程仓库）&#xA;git push -u origin master&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;更新远程仓库&#34;&gt;更新远程仓库&lt;/h4&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# 查看当前分支的关联远程仓库&#xA;git branch -vv&#xA;&#xA;# 查看远程仓库的 URL&#xA;git remote -v&#xA;&#xA;# 重新设置远程仓库的 URL&#xA;git remote set-url origin git@github.com:l1nker4/gitlearn.git&#xA;&#xA;# 将当前修改更新到远程 master 分支&#xA;git push origin master&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;3分支管理&#34;&gt;3.分支管理&lt;/h3&gt;&#xA;&lt;h4 id=&#34;创建与合并分支&#34;&gt;创建与合并分支&lt;/h4&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# 查看当前分支&#xA;git branch &#xA;&#xA;# 基于当前分支创建新分支&#xA;git branch dev&#xA;&#xA;# 切换分支&#xA;git checkout dev&#xA;&#xA;# 创建并切换分支&#xA;git checkout -b dev&#xA;&#xA;# 切换到 master 分支&#xA;git checkout master&#xA;&#xA;# 合并指定分支到当前分支(合并 dev 分支到 master 分支)&#xA;git merge dev &#xA;&#xA;# 删除分支&#xA;git branch -d dev&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;冲突管理&#34;&gt;冲突管理&lt;/h4&gt;&#xA;&lt;p&gt;在 master 分支上修改 readme.md，新增一行内容。提交修改。 在 dev 分支上修改 readme.md，也新增一行内容。提交修改。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
