<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux on L1nker4&#39;s Blog | 格木观云</title>
    <link>http://localhost:1313/categories/linux/</link>
    <description>Recent content in Linux on L1nker4&#39;s Blog | 格木观云</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 23 Jul 2022 09:52:49 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/categories/linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Linux文件管理模块分析</title>
      <link>http://localhost:1313/posts/linux/linux%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86%E6%A8%A1%E5%9D%97%E5%88%86%E6%9E%90/</link>
      <pubDate>Sat, 23 Jul 2022 09:52:49 +0000</pubDate>
      <guid>http://localhost:1313/posts/linux/linux%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86%E6%A8%A1%E5%9D%97%E5%88%86%E6%9E%90/</guid>
      <description>&lt;h2 id=&#34;硬盘文件系统&#34;&gt;硬盘文件系统&lt;/h2&gt;&#xA;&lt;h3 id=&#34;inode与块的存储&#34;&gt;inode与块的存储&lt;/h3&gt;&#xA;&lt;p&gt;硬盘读写时以扇区为单位，文件系统中读写数据最小单位为块，一个块（簇）内部是相邻的几个扇区，在Linux中的ext文件系统，默认大小为4K。&lt;/p&gt;&#xA;&lt;p&gt;文件的元数据存放在inode中，ext4中定义如下：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; ext4_inode {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;__le16&#x9;i_mode;&#x9;&#x9;&lt;span style=&#34;color:#75715e&#34;&gt;/* File mode */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;__le16&#x9;i_uid;&#x9;&#x9;&lt;span style=&#34;color:#75715e&#34;&gt;/* Low 16 bits of Owner Uid */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;__le32&#x9;i_size_lo;&#x9;&lt;span style=&#34;color:#75715e&#34;&gt;/* Size in bytes */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;__le32&#x9;i_atime;&#x9;&lt;span style=&#34;color:#75715e&#34;&gt;/* Access time */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;__le32&#x9;i_ctime;&#x9;&lt;span style=&#34;color:#75715e&#34;&gt;/* Inode Change time */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;__le32&#x9;i_mtime;&#x9;&lt;span style=&#34;color:#75715e&#34;&gt;/* Modification time */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;__le32&#x9;i_dtime;&#x9;&lt;span style=&#34;color:#75715e&#34;&gt;/* Deletion Time */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;__le16&#x9;i_gid;&#x9;&#x9;&lt;span style=&#34;color:#75715e&#34;&gt;/* Low 16 bits of Group Id */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;__le16&#x9;i_links_count;&#x9;&lt;span style=&#34;color:#75715e&#34;&gt;/* Links count */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;__le32&#x9;i_blocks_lo;&#x9;&lt;span style=&#34;color:#75715e&#34;&gt;/* Blocks count */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;__le32&#x9;i_flags;&#x9;&lt;span style=&#34;color:#75715e&#34;&gt;/* File flags */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;......&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;__le32&#x9;i_block[EXT4_N_BLOCKS];&lt;span style=&#34;color:#75715e&#34;&gt;/* Pointers to blocks */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;__le32&#x9;i_generation;&#x9;&lt;span style=&#34;color:#75715e&#34;&gt;/* File version (for NFS) */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;__le32&#x9;i_file_acl_lo;&#x9;&lt;span style=&#34;color:#75715e&#34;&gt;/* File ACL */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;__le32&#x9;i_size_high;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;......&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define&#x9;EXT4_NDIR_BLOCKS&#x9;&#x9;12&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define&#x9;EXT4_IND_BLOCK&#x9;&#x9;&#x9;EXT4_NDIR_BLOCKS&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define&#x9;EXT4_DIND_BLOCK&#x9;&#x9;&#x9;(EXT4_IND_BLOCK + 1)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define&#x9;EXT4_TIND_BLOCK&#x9;&#x9;&#x9;(EXT4_DIND_BLOCK + 1)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define&#x9;EXT4_N_BLOCKS&#x9;&#x9;&#x9;(EXT4_TIND_BLOCK + 1)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;i_block&lt;/code&gt;中存放文件所在的磁盘块地址，可以通过多层寻址增加文件大小上限。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Linux内存管理模块分析</title>
      <link>http://localhost:1313/posts/linux/linux%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86%E6%A8%A1%E5%9D%97%E5%88%86%E6%9E%90/</link>
      <pubDate>Sun, 17 Jul 2022 09:52:49 +0000</pubDate>
      <guid>http://localhost:1313/posts/linux/linux%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86%E6%A8%A1%E5%9D%97%E5%88%86%E6%9E%90/</guid>
      <description>&lt;h2 id=&#34;概述&#34;&gt;概述&lt;/h2&gt;&#xA;&lt;p&gt;内存管理主要分为三个方面：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;管理物理内存：只有内核中负责内存管理的模块可以使用&lt;/li&gt;&#xA;&lt;li&gt;管理虚拟内存：每个进程看到的都是独立且互不干扰的虚拟空间&lt;/li&gt;&#xA;&lt;li&gt;物理内存和虚拟内存的转换：上述两者的映射关系&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;无论是内核态程序还是用户态程序，都使用虚拟内存，虚拟内存空间布局如下：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://blog-1251613845.cos.ap-shanghai.myqcloud.com/image-20220723131749685.png&#34; alt=&#34;Linux-Process-Virtual-Memory&#34;&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;内核空间部分：存放内核进程的程序&lt;/li&gt;&#xA;&lt;li&gt;用户空间部分：存放用户进程的程序，从最低位开始，逐个段如下：&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Text Segment：存放二进制可执行代码的位置&lt;/li&gt;&#xA;&lt;li&gt;Data Segment：存放静态常量&lt;/li&gt;&#xA;&lt;li&gt;BSS Segment：存放未初始化的静态变量&lt;/li&gt;&#xA;&lt;li&gt;Heap：动态分配内存的区域，malloc在这个空间分配&lt;/li&gt;&#xA;&lt;li&gt;Memory Mapping Segment：用来把文件映射到内存的区域，如果可执行文件依赖某个动态链接库，so文件就映射在这。&lt;/li&gt;&#xA;&lt;li&gt;Stack：进程的函数调用栈，由一个个frame（相当于函数实体）构成，内部存放局部变量、返回地址等信息，frame结构如下图所示：&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://blog-1251613845.cos.ap-shanghai.myqcloud.com/image-20220717113852718.png&#34; alt=&#34;stack-frame&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;可以通过&lt;code&gt;pmap pid&lt;/code&gt;展示进程的地址空间相关信息。&lt;/p&gt;&#xA;&lt;h2 id=&#34;基本概念&#34;&gt;基本概念&lt;/h2&gt;&#xA;&lt;h3 id=&#34;分段机制&#34;&gt;分段机制&lt;/h3&gt;&#xA;&lt;p&gt;分段机制如下图所示：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://blog-1251613845.cos.ap-shanghai.myqcloud.com/image-20220717133205056.png&#34; alt=&#34;分段机制&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;在Linux中，段表被称为&lt;strong&gt;段描述符表&lt;/strong&gt;，放在&lt;strong&gt;全局描述符表 GDT&lt;/strong&gt;中，一个段表项由段基址base，界限limit，还有一些标识符组成：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;DEFINE_PER_CPU_PAGE_ALIGNED&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; gdt_page, gdt_page) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; { .gdt &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#ifdef CONFIG_X86_64&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#x9;[GDT_ENTRY_KERNEL32_CS]&#x9;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;GDT_ENTRY_INIT&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0xc09b&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0xfffff&lt;/span&gt;),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;[GDT_ENTRY_KERNEL_CS]&#x9;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;GDT_ENTRY_INIT&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0xa09b&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0xfffff&lt;/span&gt;),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;[GDT_ENTRY_KERNEL_DS]&#x9;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;GDT_ENTRY_INIT&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0xc093&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0xfffff&lt;/span&gt;),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;[GDT_ENTRY_DEFAULT_USER32_CS]&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;GDT_ENTRY_INIT&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0xc0fb&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0xfffff&lt;/span&gt;),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;[GDT_ENTRY_DEFAULT_USER_DS]&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;GDT_ENTRY_INIT&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0xc0f3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0xfffff&lt;/span&gt;),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;[GDT_ENTRY_DEFAULT_USER_CS]&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;GDT_ENTRY_INIT&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0xa0fb&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0xfffff&lt;/span&gt;),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#else&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#x9;[GDT_ENTRY_KERNEL_CS]&#x9;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;GDT_ENTRY_INIT&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0xc09a&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0xfffff&lt;/span&gt;),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;[GDT_ENTRY_KERNEL_DS]&#x9;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;GDT_ENTRY_INIT&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0xc092&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0xfffff&lt;/span&gt;),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;[GDT_ENTRY_DEFAULT_USER_CS]&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;GDT_ENTRY_INIT&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0xc0fa&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0xfffff&lt;/span&gt;),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;[GDT_ENTRY_DEFAULT_USER_DS]&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;GDT_ENTRY_INIT&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0xc0f2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0xfffff&lt;/span&gt;),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;......&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#endif&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;} };&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;EXPORT_PER_CPU_SYMBOL_GPL&lt;/span&gt;(gdt_page);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define __KERNEL_CS&#x9;&#x9;&#x9;(GDT_ENTRY_KERNEL_CS*8)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define __KERNEL_DS&#x9;&#x9;&#x9;(GDT_ENTRY_KERNEL_DS*8)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define __USER_DS&#x9;&#x9;&#x9;(GDT_ENTRY_DEFAULT_USER_DS*8 + 3)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define __USER_CS&#x9;&#x9;&#x9;(GDT_ENTRY_DEFAULT_USER_CS*8 + 3)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;分段机制在Linux中，可以做权限审核，用户态试图访问内核态，权限不足会禁止访问。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Linux进程管理模块分析</title>
      <link>http://localhost:1313/posts/linux/linux%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86%E6%A8%A1%E5%9D%97%E5%88%86%E6%9E%90/</link>
      <pubDate>Thu, 14 Jul 2022 23:31:46 +0000</pubDate>
      <guid>http://localhost:1313/posts/linux/linux%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86%E6%A8%A1%E5%9D%97%E5%88%86%E6%9E%90/</guid>
      <description>&lt;h2 id=&#34;二进制程序执行&#34;&gt;二进制程序执行&lt;/h2&gt;&#xA;&lt;h3 id=&#34;编译过程&#34;&gt;编译过程&lt;/h3&gt;&#xA;&lt;p&gt;源代码文件会经过以下的步骤生成可执行文件（CSAPP）：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;预处理：预处理过程会将头文件嵌入代码中，定义宏展开，生成&lt;code&gt;.i&lt;/code&gt;文件&lt;/li&gt;&#xA;&lt;li&gt;编译：编译生成汇编语言程序,生成&lt;code&gt;.s&lt;/code&gt;文件&lt;/li&gt;&#xA;&lt;li&gt;汇编：汇编器as将汇编语言翻译成机器指令，打包成&lt;code&gt;.o&lt;/code&gt;文件，这被称为&lt;code&gt;Relocatable File&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;链接：链接器ld将链接库和重定位文件合并，生成可执行文件&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;编译&#34;&gt;编译&lt;/h3&gt;&#xA;&lt;p&gt;&lt;code&gt;process.c&lt;/code&gt;内容如下：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;sys/types.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;unistd.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;extern&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;create_process&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; program, &lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;**&lt;/span&gt; arg_list);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;create_process&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; program, &lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;**&lt;/span&gt; arg_list)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;pid_t&lt;/span&gt; child_pid;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    child_pid &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fork&lt;/span&gt; ();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (child_pid &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; child_pid;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;execvp&lt;/span&gt; (program, arg_list);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;abort&lt;/span&gt; ();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;createprocess.c&lt;/code&gt;内容如下：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;sys/types.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;unistd.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;extern&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;create_process&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; program, &lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;**&lt;/span&gt; arg_list);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt; ()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; arg_list[] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ls&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-l&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/opt/&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        NULL&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    };&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;create_process&lt;/span&gt; (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ls&amp;#34;&lt;/span&gt;, arg_list);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;编译上面两个文件，生成&lt;code&gt;.o&lt;/code&gt;文件&lt;/p&gt;</description>
    </item>
    <item>
      <title>分析Linux中的Zero-Copy技术</title>
      <link>http://localhost:1313/posts/linux/%E5%88%86%E6%9E%90zero-copy%E6%8A%80%E6%9C%AF/</link>
      <pubDate>Thu, 30 Jun 2022 20:33:10 +0000</pubDate>
      <guid>http://localhost:1313/posts/linux/%E5%88%86%E6%9E%90zero-copy%E6%8A%80%E6%9C%AF/</guid>
      <description>&lt;h2 id=&#34;传统io的流程&#34;&gt;传统IO的流程&lt;/h2&gt;&#xA;&lt;p&gt;零拷贝技术是对传统IO的性能优化，在介绍零拷贝之前，先简单了解一下传统IO中，数据流向的过程：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;用户进程发起&lt;code&gt;read()&lt;/code&gt;调用，从用户态切换至内核态，DMA从文件中读取数据，并存储在IO Buffer（内核态）&lt;/li&gt;&#xA;&lt;li&gt;请求得到的数据从IO Buffer拷贝到用户态Buffer（从内核态切换到用户态），然后返回给用户进程。&lt;/li&gt;&#xA;&lt;li&gt;用户进程调用&lt;code&gt;write()&lt;/code&gt;将数据输出到网卡中，此时将从用户态切换到内核态，请求数据从用户进程空间拷贝到Socket Buffer。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;write()&lt;/code&gt;调用结束后返回用户进程，此时从内核态切换到用户态。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;整个过程中涉及4次上下文切换、4次数据拷贝（2次CPU拷贝 + 2次DMA拷贝）。&lt;/p&gt;&#xA;&lt;p&gt;我们需要对该流程进行优化，以提高IO的性能，因此诞生了零拷贝的概念。&lt;/p&gt;&#xA;&lt;h2 id=&#34;零拷贝&#34;&gt;零拷贝&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&amp;ldquo;&lt;strong&gt;Zero-copy&lt;/strong&gt;&amp;rdquo; describes &lt;a href=&#34;https://en.wikipedia.org/wiki/Computer&#34;&gt;computer&lt;/a&gt; operations in which the &lt;a href=&#34;https://en.wikipedia.org/wiki/Central_processing_unit&#34;&gt;CPU&lt;/a&gt; does not perform the task of copying data from one &lt;a href=&#34;https://en.wikipedia.org/wiki/RAM&#34;&gt;memory&lt;/a&gt; area to another or in which unnecessary data copies are avoided. This is frequently used to save CPU cycles and memory bandwidth in many time consuming tasks, such as when transmitting a &lt;a href=&#34;https://en.wikipedia.org/wiki/Computer_file&#34;&gt;file&lt;/a&gt; at high speed over a &lt;a href=&#34;https://en.wikipedia.org/wiki/Telecommunications_network&#34;&gt;network&lt;/a&gt;, etc., thus improving &lt;a href=&#34;https://en.wikipedia.org/wiki/Computer_performance&#34;&gt;performances&lt;/a&gt; of &lt;a href=&#34;https://en.wikipedia.org/wiki/Computer_program&#34;&gt;programs&lt;/a&gt; (&lt;a href=&#34;https://en.wikipedia.org/wiki/Process_(computing)&#34;&gt;processes&lt;/a&gt;) executed by a computer.&lt;/p&gt;</description>
    </item>
    <item>
      <title>小记-构建RPM包</title>
      <link>http://localhost:1313/posts/linux/%E5%B0%8F%E8%AE%B0-%E6%9E%84%E5%BB%BArpm%E5%8C%85/</link>
      <pubDate>Mon, 27 Jun 2022 18:38:46 +0000</pubDate>
      <guid>http://localhost:1313/posts/linux/%E5%B0%8F%E8%AE%B0-%E6%9E%84%E5%BB%BArpm%E5%8C%85/</guid>
      <description>&lt;h2 id=&#34;准备工作&#34;&gt;准备工作&lt;/h2&gt;&#xA;&lt;p&gt;OS环境与rpm版本号如下：&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[root@localhost ~]# uname -a&#xD;&#xA;Linux localhost.localdomain 3.10.0-693.el7.x86_64 #1 SMP Tue Aug 22 21:09:27 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux&#xD;&#xA;&#xD;&#xA;[root@localhost ~]# rpm --version&#xD;&#xA;RPM 版本 4.11.3&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;安装rpm-build&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;yum install -y rpm-build&#x9;# 构建的rpm的核心组件&#xD;&#xA;yum install -y rpmdevtools  # 提供了构建rpm包的一些工具&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;查看工作目录：&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[root@localhost rpmbuild]# rpmbuild --showrc | grep topdir&#xD;&#xA;-14: _builddir&#x9;%{_topdir}/BUILD&#xD;&#xA;-14: _buildrootdir&#x9;%{_topdir}/BUILDROOT&#xD;&#xA;-14: _rpmdir&#x9;%{_topdir}/RPMS&#xD;&#xA;-14: _sourcedir&#x9;%{_topdir}/SOURCES&#xD;&#xA;-14: _specdir&#x9;%{_topdir}/SPECS&#xD;&#xA;-14: _srcrpmdir&#x9;%{_topdir}/SRPMS&#xD;&#xA;-14: _topdir&#x9;%{getenv:HOME}/rpmbuild&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;工作目录位于&lt;code&gt;$HOME/rpmbuild&lt;/code&gt;，在该目录下创建以下文件夹、或直接使用&lt;code&gt;rpmdev-setuptree&lt;/code&gt;生成目录：&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[root@localhost rpmbuild]# mkdir -pv /root/rpmbuild/{BUILD,BUILDROOT,RPMS,SOURCES,SPECS,SRPMS}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;目录的各个用途如下：&lt;/p&gt;</description>
    </item>
    <item>
      <title>Linux学习笔记</title>
      <link>http://localhost:1313/posts/linux/linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Tue, 09 Jul 2019 18:38:46 +0000</pubDate>
      <guid>http://localhost:1313/posts/linux/linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid>
      <description></description>
    </item>
    <item>
      <title>FastDFS使用入门</title>
      <link>http://localhost:1313/posts/linux/fastdfs-01/</link>
      <pubDate>Sat, 25 May 2019 10:03:52 +0000</pubDate>
      <guid>http://localhost:1313/posts/linux/fastdfs-01/</guid>
      <description>&lt;!-- more --&gt;&#xA;&lt;h2 id=&#34;介绍&#34;&gt;介绍&lt;/h2&gt;&#xA;&lt;p&gt;FastDFS是一个开源的分布式文件系统，主要有以下功能。&lt;/p&gt;&#xA;&lt;p&gt;分布式文件系统（Distributed File System）是指文件系统管理的物理存储资源不一定直接连接在本地节点上，而是通过计算机网络与节点相连。&lt;/p&gt;&#xA;&lt;p&gt;FastDFS主要有以下特点：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;文件存储&lt;/li&gt;&#xA;&lt;li&gt;文件同步&lt;/li&gt;&#xA;&lt;li&gt;文件访问（上传、下载）&lt;/li&gt;&#xA;&lt;li&gt;存取负载均衡&lt;/li&gt;&#xA;&lt;li&gt;在线扩容&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;fastdfs的架构&#34;&gt;FastDFS的架构&lt;/h2&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://blog-1251613845.cos.ap-shanghai.myqcloud.com/1526205318630.png&#34; alt=&#34;1526205318630.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;由三个部分组成：Client，Tracker Server，Storage Server。&lt;/p&gt;&#xA;&lt;p&gt;Client是上传下载数据的服务器，Tracker Server是跟踪服务器，主要做调度工作，起到负载均衡，管理所有的Storage Server。Storage Server：存储服务器，主要提供容量和备份服务。&lt;/p&gt;&#xA;&lt;h2 id=&#34;fastdfs安装&#34;&gt;FastDFS安装&lt;/h2&gt;&#xA;&lt;h3 id=&#34;安装环境&#34;&gt;安装环境&lt;/h3&gt;&#xA;&lt;p&gt;操作系统：Ubuntu 18.04&lt;/p&gt;&#xA;&lt;h4 id=&#34;下载libfastcommon&#34;&gt;下载libfastcommon&lt;/h4&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;wget https://github.com/happyfish100/libfastcommon/archive/V1.0.7.tar.gz&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;解压&#34;&gt;解压&lt;/h4&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tar -zxvf V1.0.7.tar.gz&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd libfastcommon-1.0.7&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;编译-安装&#34;&gt;编译 安装&lt;/h4&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;./make.sh&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;./make.sh install&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;设置软链接&#34;&gt;设置软链接&lt;/h4&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ln -s /usr/lib64/libfastcommon.so /usr/local/lib/libfastcommon.so&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ln -s /usr/lib64/libfastcommon.so /usr/lib/libfastcommon.so&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ln -s /usr/lib64/libfdfsclient.so /usr/local/lib/libfdfsclient.so&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ln -s /usr/lib64/libfdfsclient.so /usr/lib/libfdfsclient.so&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;安装fastdfs&#34;&gt;安装FastDFS&lt;/h4&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;wget https://github.com/happyfish100/fastdfs/archive/V5.05.tar.gz&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tar -zxvf V5.05.tar.gz&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd fastdfs-5.05&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;./make.sh&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;./make.sh install&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;配置tracker服务器&#34;&gt;&lt;strong&gt;配置Tracker服务器&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd /etc/fdfs&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cp tracker.conf.sample tracker.conf&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vim tracker.conf&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;修改&lt;code&gt;base_path&lt;/code&gt;为指定目录&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
